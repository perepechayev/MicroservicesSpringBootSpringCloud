server:
  port: 7003
  error:
    include-message: always

spring:
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update

  datasource:
    url: jdbc:mysql://localhost/review-db
    username: user
    password: pwd

    hikari:
      initializationFailTimeout: 60000
  cloud.function.definition: messageProcessor
  cloud.stream:
    defaultBinder: rabbit
    default.contentType: application/json
    bindinga.messageProcessor-in-0:
      destination: reviews
      group: reviewsGroup

  cloud.stream.bindings.messageProcessor-in-0.consumer:
    maxAttempts: 3
    backOffInitialInterval: 500
    backOffMaxInterval: 1000
    backOffMultiplier: 2.0


  cloud.stream.rabbit.bindings.messageProcessor-in-consumer:
    autoBindDlq: true
    repulishToDlq: true

  cloud.stream.kafka.bndings.messageProcessor-in-0.consumer:
    enableDql: true

  cloud.stream.kafka.binder:
    brokers: 127.0.0.1
    defaultBrokerPort: 9092

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

logging:
  level:
    root: INFO
    org.psp: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: '*'
---
spring.config.activate.on-profile: docker

server.port: 8080

spring:
  datasource:
    url: jdbc:mysql://mysql/review-db

spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka

---

spring.config.activate.on-profile: streaming_partitioned

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0
---

spring.config.activate.on-profile: streaming_insance_1
spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1
---

spring.config.activate.on-profile: kafka
management.health.rabbit.enabled: false
spring.cloud.stream.defaultBinder: kafka
spring.kafka.bootstrap-servers: kafka:9092
spring.cloud.stream.kafka.binder.replication-factor: 1
