server:
  port: 7001
  error:
    include-message: always

spring.application.name: product

app:
  eureka-username: u
  eureka-password: p
  eureka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring:
  data:
    mongodb:
      host: localhost
      port: 27017
      database: product-db
  cloud:
    function:
      definition: messageProcessor
    stream:
      defaultBinder: rabbit
      default.contentType: application/json
      bindings.messageProcessor-in-0:
        destination: products
        group: productsGroup        
      bindings:
        messageProcessor-in-0.consumer:
          maxAttempts: 3
          backOffInitialInterval: 500
          backOffMaxInterval: 1000
          backOffMultiplier: 2.0

      rabbit:
        bindings:
          messageProcessor-in-0.consumer:
            autoBindDlq: true
            republishDlq: true

      kafka:
        bindings:
          messageProcessor-in-0.consumer:
            enableDlq: true
        binder:
          brokers: 127.0.0.1
          defaultBrokerPort: 9092

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

logging:
  level:
    root: INFO
    org.psp: DEBUG
    org.springframework.data.mongodb.core.ReactiveMongoTemplate: DEBUG

management:
  endpoint:
    health:
      show-details: "ALWAYS"
  endpoints:
    wweb:
      exposure:
        include: "*"

---
spring.config.activate.on-profile: docker

server.port: 8080

app.eureka-server: eureka

spring:
  data:
    mongodb:
      host: mongodb
  rabbitmq:
    host:
      rabbitmq
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka

---
spring:
  config:
    activate:
      on-profile: streaming_partitioned

  cloud:
    stream:
      bindings:
        messageProcessor-in-0.consumer:
          partitioned: true
          instanceCount: 2

---

spring:
  config:
    activate:
      on-profile: streaming_instance_0
  cloud:
    stream:
      bindings:
      messageProcessor-in-0:
        consumer:
          instanceIndex: 0

---

spring:
  config:
    activate:
      on-profile: streaming_instance_1

  cloud:
    stream:
      bindings:
        messageProcessor-in-0:
          consumer:
            instanceIndex: 1

---

spring:
  config:
    activate:
      on-profile: kafka
  cloud:
    stream:
      defaultBinder: kafka
      kafka:
        binder:
          replication-factor: 1
  kafka:
    bootstrap-servers: kafka:9092


management:
  health:
    rabbit:
      enabled: false

